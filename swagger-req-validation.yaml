swagger: '2.0'
info:
  description: A Test API for testing lambda/go-swagger integration
  version: 1.0.0
  title: Lambda Go Swagger Test API
  # put the contact info for your development or API team
  contact:
    email: sean@gopaddy.ch

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

x-amazon-apigateway-request-validators:
  basic:
    validateRequestBody: true
    validateRequestParameters: true
  params-only:
    validateRequestBody: false
    validateRequestParameters: true
# default is no validation
x-amazon-apigateway-request-validator: NONE

# tags are used for organizing operations
tags:
- name: open
  description: Calls which are unrestricted

paths:
  /:
    get:
      tags:
      - open
      summary: API Identifier endpoint
      operationId: getApiIdentifier
      description:
        Endpoint which returns the API version and the running backend version
      produces:
      - application/json
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations
      responses:
        200:
          description: Returns API version and running backend version
          schema:
            $ref: '#/definitions/SimpleMessageResponse'
        500:
          description: General Failure


  /no-params/empty-response:
    get:
      tags:
      - open
      summary: An endpoint which returns a HTTP response code only
      operationId: getNoParamsEmptyResponse
      description:
        An endpoint which returns a HTTP response code only
      produces:
      - application/json
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations
      responses:
        200:
          description: Successful execution of API call
        500:
          description: General Failure

  /no-params/simple-response:
    get:
      tags:
      - open
      summary: An endpoint which returns a HTTP response code and a JSON encoded message in a body
      operationId: getNoParamsSimpleResponse
      description:
        An endpoint which returns a HTTP response code and a JSON encoded message in a body
      produces:
      - application/json
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations
      responses:
        200:
          description: Successful execution of API call returning message in simple JSON object
          schema:
            $ref: '#/definitions/SimpleMessageResponse'
        500:
          description: General Failure

  /no-params/complex-response:
    get:
      tags:
      - open
      summary: An endpoint which returns a HTTP response code and a complex JSON object in a body
      operationId: getNoParamsComplexResponse
      description:
        An endpoint which returns a HTTP response code and a complex JSON object in a body
      produces:
      - application/json
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations
      responses:
        200:
          description: Successful execution of API call returning complex object
          schema:
            $ref: '#/definitions/ComplexObjectResponse'
        500:
          description: General Failure

  /no-params/error-response:
    get:
      tags:
      - open
      summary: An endpoint which returns a HTTP response code and an error response
      operationId: getNoParamsErrorResponse
      description:
        An endpoint which returns a HTTP response code and an error response
      produces:
      - application/json
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations
      responses:
        418:
          description: Error generated when executing API call
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: General Failure


  /path-param/empty-response/{param}:
    get:
      tags:
      - open
      summary: Endpoint which takes a parameter and returns a HTTP response code only
      operationId: getPathParamEmptyResponse
      description:
        Endpoint which takes a parameter and returns a HTTP response code only
      produces:
      - application/json
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations
      x-amazon-apigateway-request-validator: params-only
      responses:
        200:
          description: Successful execution of API call
        500:
          description: General Failure
      parameters:
      - in: path
        name: param
        description: An arbitrary test parameter which is ignored here
        type: integer
        required: true

  /path-param/simple-response/{param}:
    get:
      tags:
      - open
      summary: Endpoint which takes a parameter and returns a HTTP response containing a simple message
      operationId: getPathParamSimpleResponse
      description:
        Endpoint which takes a parameter and returns a HTTP response containing a simple message
      produces:
      - application/json
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations
      x-amazon-apigateway-request-validator: params-only
      responses:
        200:
          description: Successful execution of API call returning message in simple JSON object
          schema:
            $ref: '#/definitions/SimpleMessageResponse'
        500:
          description: General Failure
      parameters:
      - in: path
        name: param
        description: An arbitrary test parameter which is returned in the response
        type: integer
        required: true

  /path-param/complex-response/{param}:
    get:
      tags:
      - open
      summary: An endpoint which takes an input parameters and returns a HTTP response code and a complex JSON object in a body
      operationId: getPathParamComplexResponse
      description:
        An endpoint which takes an input parameter and returns a HTTP response code and a complex JSON object in a body
      produces:
      - application/json
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations
      x-amazon-apigateway-request-validator: params-only
      responses:
        200:
          description: Successful execution of API call returning complex object
          schema:
            $ref: '#/definitions/ComplexObjectResponse'
        500:
          description: General Failure
      parameters:
      - in: path
        name: param
        description: An arbitrary test parameter which is returned in the response
        type: integer
        required: true

  /path-param/error-response/{param}:
    get:
      tags:
      - open
      summary: An endpoint which takes an input parameter and returns a HTTP response code and an error response
      operationId: getPathParamErrorResponse
      description:
        An endpoint which takes an input parameter and returns a HTTP response code and an error response
      produces:
      - application/json
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations
      x-amazon-apigateway-request-validator: params-only
      responses:
        418:
          description: Error generated when executing API call
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: General Failure
      parameters:
      - in: path
        name: param
        description: An arbitrary test parameter which is returned in the response
        type: integer
        required: true

  /body-param/empty-response:
    get:
      tags:
      - open
      summary: Get endpoint defined which simply gives response indicating that POST should be used
      operationId: getBodyParamEmptyResponse
      description:
        Get endpoint defined which simply gives response indicating that POST should be used
      produces:
      - application/json
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations
      x-amazon-apigateway-request-validator: basic
      responses:
        501:
          description: API call runs, but there is no implementation
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: General Failure
    post:
      tags:
      - open
      summary: Endpoint which takes a body parameter and returns a HTTP response code only
      operationId: postBodyParamEmptyResponse
      description:
        Endpoint which takes a body parameter and returns a HTTP response code only
      produces:
      - application/json
      consumes:
      - application/json
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations
      x-amazon-apigateway-request-validator: basic
      responses:
        200:
          description: Successful execution of API call
        500:
          description: General Failure
      parameters:
      - in: body
        name: bodyParam
        description: An arbitrary test parameter which is ignored here
        schema:
          $ref: '#/definitions/InputObject'
        required: true


  /body-param/simple-response:
    get:
      tags:
      - open
      summary: Get endpoint defined which simply gives response indicating that POST should be used
      operationId: getBodyParamSimpleResponse
      description:
        Get endpoint defined which simply gives response indicating that POST should be used
      produces:
      - application/json
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations
      x-amazon-apigateway-request-validator: basic
      responses:
        501:
          description: API call runs, but there is no implementation
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: General Failure
    post:
      tags:
      - open
      summary: Endpoint which takes a body parameter and returns a HTTP response containing a simple message
      operationId: postBodyParamSimpleResponse
      description:
        Endpoint which takes a body parameter and returns a HTTP response containing a simple message
      produces:
      - application/json
      consumes:
      - application/json
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations
      x-amazon-apigateway-request-validator: basic
      responses:
        200:
          description: Test Response
          schema:
            $ref: '#/definitions/SimpleMessageResponse'
        500:
          description: General Failure
      parameters:
      - in: body
        name: bodyParam
        description: An input JSON object required with this call
        schema:
          $ref: '#/definitions/InputObject'
        required: true

  /body-param/complex-response:
    get:
      tags:
      - open
      summary: Get endpoint defined which simply gives response indicating that POST should be used
      operationId: getBodyParamComplexResponse
      description:
        Get endpoint defined which simply gives response indicating that POST should be used
      produces:
      - application/json
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations
      x-amazon-apigateway-request-validator: basic
      responses:
        501:
          description: API call runs, but there is no implementation
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: General Failure
    post:
      tags:
      - open
      summary: An endpoint which takes an input parameters and returns a HTTP response code and a complex JSON object in a body
      operationId: postBodyParamComplexResponse
      description:
        An endpoint which takes an input parameter and returns a HTTP response code and a complex JSON object in a body
      produces:
      - application/json
      consumes:
      - application/json
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations
      x-amazon-apigateway-request-validator: basic
      responses:
        200:
          description: Successful execution of API call returning complex object
          schema:
            $ref: '#/definitions/ComplexObjectResponse'
        500:
          description: General Failure
      parameters:
      - in: body
        name: bodyParam
        description: An input JSON object required with this call
        schema:
          $ref: '#/definitions/InputObject'
        required: true

  /body-param/error-response:
    get:
      tags:
      - open
      summary: Get endpoint defined which simply gives response indicating that POST should be used
      operationId: getBodyParamErrorResponse
      description:
        Get endpoint defined which simply gives response indicating that POST should be used
      produces:
      - application/json
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations
      x-amazon-apigateway-request-validator: basic
      responses:
        501:
          description: API call runs, but there is no implementation
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: General Failure
    post:
      tags:
      - open
      summary: An endpoint which takes an input parameter and returns a HTTP response code and an error response
      operationId: postBodyParamErrorResponse
      description:
        An endpoint which takes an input parameter and returns a HTTP response code and an error response
      produces:
      - application/json
      consumes:
      - application/json
      x-amazon-apigateway-integration:
        httpMethod: post
        type: aws_proxy
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations
      x-amazon-apigateway-request-validator: basic
      responses:
        418:
          description: Error generated when executing API call
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: General Failure
      parameters:
      - in: body
        name: bodyParam
        description: An input JSON object required with this call
        schema:
          $ref: '#/definitions/InputObject'
        required: true

definitions:
  ErrorResponse:
    type: object
    required:
    - error_number
    - error_string
    properties:
      error_string:
        type: string
      error_number:
        type: integer

  SimpleMessageResponse:
    type: object
    required:
    - message
    properties:
      message:
        type: string

  InputObject:
    type: object
    required:
    - string
    - descriptor
    - int_val
    properties:
      string:
        type: string
      descriptor:
        type: string
      int_val:
        type: integer

  SimpleObjectOne:
    type: object
    required:
    - string_array
    - descriptor
    - int_val
    properties:
      string_array:
        type: array
        items:
          type: string
      descriptor:
        type: string
      int_val:
        type: integer

  SimpleObjectTwo:
    type: object
    required:
    - int_array
    - descriptor
    properties:
      int_array:
        type: array
        items:
          type: integer
      descriptor:
        type: string

  ComplexObjectResponse:
    type: object
    required:
    - object1
    - object2
    properties:
      object1:
        $ref: '#/definitions/SimpleObjectOne'
      object2:
        $ref: '#/definitions/SimpleObjectTwo'
      optional_param:
        type: integer
