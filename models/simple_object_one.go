// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SimpleObjectOne simple object one
//
// swagger:model SimpleObjectOne
type SimpleObjectOne struct {

	// descriptor
	// Required: true
	Descriptor *string `json:"descriptor"`

	// int val
	// Required: true
	IntVal *int64 `json:"int_val"`

	// string array
	// Required: true
	StringArray []string `json:"string_array"`
}

// Validate validates this simple object one
func (m *SimpleObjectOne) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDescriptor(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIntVal(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStringArray(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SimpleObjectOne) validateDescriptor(formats strfmt.Registry) error {

	if err := validate.Required("descriptor", "body", m.Descriptor); err != nil {
		return err
	}

	return nil
}

func (m *SimpleObjectOne) validateIntVal(formats strfmt.Registry) error {

	if err := validate.Required("int_val", "body", m.IntVal); err != nil {
		return err
	}

	return nil
}

func (m *SimpleObjectOne) validateStringArray(formats strfmt.Registry) error {

	if err := validate.Required("string_array", "body", m.StringArray); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SimpleObjectOne) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SimpleObjectOne) UnmarshalBinary(b []byte) error {
	var res SimpleObjectOne
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
