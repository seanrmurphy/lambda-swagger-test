// Code generated by go-swagger; DO NOT EDIT.

package open

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetNoParamsEmptyResponseHandlerFunc turns a function with the right signature into a get no params empty response handler
type GetNoParamsEmptyResponseHandlerFunc func(GetNoParamsEmptyResponseParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetNoParamsEmptyResponseHandlerFunc) Handle(params GetNoParamsEmptyResponseParams) middleware.Responder {
	return fn(params)
}

// GetNoParamsEmptyResponseHandler interface for that can handle valid get no params empty response params
type GetNoParamsEmptyResponseHandler interface {
	Handle(GetNoParamsEmptyResponseParams) middleware.Responder
}

// NewGetNoParamsEmptyResponse creates a new http.Handler for the get no params empty response operation
func NewGetNoParamsEmptyResponse(ctx *middleware.Context, handler GetNoParamsEmptyResponseHandler) *GetNoParamsEmptyResponse {
	return &GetNoParamsEmptyResponse{Context: ctx, Handler: handler}
}

/*GetNoParamsEmptyResponse swagger:route GET /no-params/empty-response open getNoParamsEmptyResponse

An endpoint which returns a HTTP response code only

An endpoint which returns a HTTP response code only

*/
type GetNoParamsEmptyResponse struct {
	Context *middleware.Context
	Handler GetNoParamsEmptyResponseHandler
}

func (o *GetNoParamsEmptyResponse) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetNoParamsEmptyResponseParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
