// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "A Test API for testing lambda/go-swagger integration",
    "title": "Lambda Go Swagger Test API",
    "contact": {
      "email": "sean@gopaddy.ch"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "paths": {
    "/": {
      "get": {
        "description": "Endpoint which returns the API version and the running backend version",
        "produces": [
          "application/json"
        ],
        "tags": [
          "open"
        ],
        "summary": "API Identifier endpoint",
        "operationId": "getApiIdentifier",
        "responses": {
          "200": {
            "description": "Returns API version and running backend version",
            "schema": {
              "$ref": "#/definitions/SimpleMessageResponse"
            }
          },
          "500": {
            "description": "General Failure"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "post",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations"
          }
        }
      }
    },
    "/body-param/complex-response": {
      "get": {
        "description": "Get endpoint defined which simply gives response indicating that POST should be used",
        "produces": [
          "application/json"
        ],
        "tags": [
          "open"
        ],
        "summary": "Get endpoint defined which simply gives response indicating that POST should be used",
        "operationId": "getBodyParamComplexResponse",
        "responses": {
          "500": {
            "description": "General Failure"
          },
          "501": {
            "description": "API call runs, but there is no implementation",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "post",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations"
          }
        }
      },
      "post": {
        "description": "An endpoint which takes an input parameter and returns a HTTP response code and a complex JSON object in a body",
        "produces": [
          "application/json"
        ],
        "tags": [
          "open"
        ],
        "summary": "An endpoint which takes an input parameters and returns a HTTP response code and a complex JSON object in a body",
        "operationId": "postBodyParamComplexResponse",
        "parameters": [
          {
            "description": "An input JSON object required with this call",
            "name": "bodyParam",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InputObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful execution of API call returning complex object",
            "schema": {
              "$ref": "#/definitions/ComplexObjectResponse"
            }
          },
          "500": {
            "description": "General Failure"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "post",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations"
          }
        }
      }
    },
    "/body-param/empty-response": {
      "get": {
        "description": "Get endpoint defined which simply gives response indicating that POST should be used",
        "produces": [
          "application/json"
        ],
        "tags": [
          "open"
        ],
        "summary": "Get endpoint defined which simply gives response indicating that POST should be used",
        "operationId": "getBodyParamEmptyResponse",
        "responses": {
          "500": {
            "description": "General Failure"
          },
          "501": {
            "description": "API call runs, but there is no implementation",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "post",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations"
          }
        }
      },
      "post": {
        "description": "Endpoint which takes a body parameter and returns a HTTP response code only",
        "produces": [
          "application/json"
        ],
        "tags": [
          "open"
        ],
        "summary": "Endpoint which takes a body parameter and returns a HTTP response code only",
        "operationId": "postBodyParamEmptyResponse",
        "parameters": [
          {
            "description": "An arbitrary test parameter which is ignored here",
            "name": "bodyParam",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InputObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful execution of API call"
          },
          "500": {
            "description": "General Failure"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "post",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations"
          }
        }
      }
    },
    "/body-param/error-response": {
      "get": {
        "description": "Get endpoint defined which simply gives response indicating that POST should be used",
        "produces": [
          "application/json"
        ],
        "tags": [
          "open"
        ],
        "summary": "Get endpoint defined which simply gives response indicating that POST should be used",
        "operationId": "getBodyParamErrorResponse",
        "responses": {
          "500": {
            "description": "General Failure"
          },
          "501": {
            "description": "API call runs, but there is no implementation",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "post",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations"
          }
        }
      },
      "post": {
        "description": "An endpoint which takes an input parameter and returns a HTTP response code and an error response",
        "produces": [
          "application/json"
        ],
        "tags": [
          "open"
        ],
        "summary": "An endpoint which takes an input parameter and returns a HTTP response code and an error response",
        "operationId": "postBodyParamErrorResponse",
        "parameters": [
          {
            "description": "An input JSON object required with this call",
            "name": "bodyParam",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InputObject"
            }
          }
        ],
        "responses": {
          "418": {
            "description": "Error generated when executing API call",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "General Failure"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "post",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations"
          }
        }
      }
    },
    "/body-param/simple-response": {
      "get": {
        "description": "Get endpoint defined which simply gives response indicating that POST should be used",
        "produces": [
          "application/json"
        ],
        "tags": [
          "open"
        ],
        "summary": "Get endpoint defined which simply gives response indicating that POST should be used",
        "operationId": "getBodyParamSimpleResponse",
        "responses": {
          "500": {
            "description": "General Failure"
          },
          "501": {
            "description": "API call runs, but there is no implementation",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "post",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations"
          }
        }
      },
      "post": {
        "description": "Endpoint which takes a body parameter and returns a HTTP response containing a simple message",
        "produces": [
          "application/json"
        ],
        "tags": [
          "open"
        ],
        "summary": "Endpoint which takes a body parameter and returns a HTTP response containing a simple message",
        "operationId": "postBodyParamSimpleResponse",
        "parameters": [
          {
            "description": "An input JSON object required with this call",
            "name": "bodyParam",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InputObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Test Response",
            "schema": {
              "$ref": "#/definitions/SimpleMessageResponse"
            }
          },
          "500": {
            "description": "General Failure"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "post",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations"
          }
        }
      }
    },
    "/no-params/complex-response": {
      "get": {
        "description": "An endpoint which returns a HTTP response code and a complex JSON object in a body",
        "produces": [
          "application/json"
        ],
        "tags": [
          "open"
        ],
        "summary": "An endpoint which returns a HTTP response code and a complex JSON object in a body",
        "operationId": "getNoParamsComplexResponse",
        "responses": {
          "200": {
            "description": "Successful execution of API call returning complex object",
            "schema": {
              "$ref": "#/definitions/ComplexObjectResponse"
            }
          },
          "500": {
            "description": "General Failure"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "post",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations"
          }
        }
      }
    },
    "/no-params/empty-response": {
      "get": {
        "description": "An endpoint which returns a HTTP response code only",
        "produces": [
          "application/json"
        ],
        "tags": [
          "open"
        ],
        "summary": "An endpoint which returns a HTTP response code only",
        "operationId": "getNoParamsEmptyResponse",
        "responses": {
          "200": {
            "description": "Successful execution of API call"
          },
          "500": {
            "description": "General Failure"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "post",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations"
          }
        }
      }
    },
    "/no-params/error-response": {
      "get": {
        "description": "An endpoint which returns a HTTP response code and an error response",
        "produces": [
          "application/json"
        ],
        "tags": [
          "open"
        ],
        "summary": "An endpoint which returns a HTTP response code and an error response",
        "operationId": "getNoParamsErrorResponse",
        "responses": {
          "418": {
            "description": "Error generated when executing API call",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "General Failure"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "post",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations"
          }
        }
      }
    },
    "/no-params/simple-response": {
      "get": {
        "description": "An endpoint which returns a HTTP response code and a JSON encoded message in a body",
        "produces": [
          "application/json"
        ],
        "tags": [
          "open"
        ],
        "summary": "An endpoint which returns a HTTP response code and a JSON encoded message in a body",
        "operationId": "getNoParamsSimpleResponse",
        "responses": {
          "200": {
            "description": "Successful execution of API call returning message in simple JSON object",
            "schema": {
              "$ref": "#/definitions/SimpleMessageResponse"
            }
          },
          "500": {
            "description": "General Failure"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "post",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations"
          }
        }
      }
    },
    "/path-param/complex-response/{param}": {
      "get": {
        "description": "An endpoint which takes an input parameter and returns a HTTP response code and a complex JSON object in a body",
        "produces": [
          "application/json"
        ],
        "tags": [
          "open"
        ],
        "summary": "An endpoint which takes an input parameters and returns a HTTP response code and a complex JSON object in a body",
        "operationId": "getPathParamComplexResponse",
        "parameters": [
          {
            "type": "string",
            "description": "An arbitrary test parameter which is returned in the response",
            "name": "param",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful execution of API call returning complex object",
            "schema": {
              "$ref": "#/definitions/ComplexObjectResponse"
            }
          },
          "500": {
            "description": "General Failure"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "post",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations"
          }
        }
      }
    },
    "/path-param/empty-response/{param}": {
      "get": {
        "description": "Endpoint which takes a parameter and returns a HTTP response code only",
        "produces": [
          "application/json"
        ],
        "tags": [
          "open"
        ],
        "summary": "Endpoint which takes a parameter and returns a HTTP response code only",
        "operationId": "getPathParamEmptyResponse",
        "parameters": [
          {
            "type": "string",
            "description": "An arbitrary test parameter which is ignored here",
            "name": "param",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful execution of API call"
          },
          "500": {
            "description": "General Failure"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "post",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations"
          }
        }
      }
    },
    "/path-param/error-response/{param}": {
      "get": {
        "description": "An endpoint which takes an input parameter and returns a HTTP response code and an error response",
        "produces": [
          "application/json"
        ],
        "tags": [
          "open"
        ],
        "summary": "An endpoint which takes an input parameter and returns a HTTP response code and an error response",
        "operationId": "getPathParamErrorResponse",
        "parameters": [
          {
            "type": "string",
            "description": "An arbitrary test parameter which is returned in the response",
            "name": "param",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "418": {
            "description": "Error generated when executing API call",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "General Failure"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "post",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations"
          }
        }
      }
    },
    "/path-param/simple-response/{param}": {
      "get": {
        "description": "Endpoint which takes a parameter and returns a HTTP response containing a simple message",
        "produces": [
          "application/json"
        ],
        "tags": [
          "open"
        ],
        "summary": "Endpoint which takes a parameter and returns a HTTP response containing a simple message",
        "operationId": "getPathParamSimpleResponse",
        "parameters": [
          {
            "type": "string",
            "description": "An arbitrary test parameter which is returned in the response",
            "name": "param",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful execution of API call returning message in simple JSON object",
            "schema": {
              "$ref": "#/definitions/SimpleMessageResponse"
            }
          },
          "500": {
            "description": "General Failure"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "post",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations"
          }
        }
      }
    }
  },
  "definitions": {
    "ComplexObjectResponse": {
      "type": "object",
      "required": [
        "object1",
        "object2"
      ],
      "properties": {
        "object1": {
          "$ref": "#/definitions/SimpleObjectOne"
        },
        "object2": {
          "$ref": "#/definitions/SimpleObjectTwo"
        },
        "optional_param": {
          "type": "integer"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "required": [
        "error_number",
        "error_string"
      ],
      "properties": {
        "error_number": {
          "type": "integer"
        },
        "error_string": {
          "type": "string"
        }
      }
    },
    "InputObject": {
      "type": "object",
      "required": [
        "string",
        "descriptor",
        "int_val"
      ],
      "properties": {
        "descriptor": {
          "type": "string"
        },
        "int_val": {
          "type": "integer"
        },
        "string": {
          "type": "string"
        }
      }
    },
    "SimpleMessageResponse": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "SimpleObjectOne": {
      "type": "object",
      "required": [
        "string_array",
        "descriptor",
        "int_val"
      ],
      "properties": {
        "descriptor": {
          "type": "string"
        },
        "int_val": {
          "type": "integer"
        },
        "string_array": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SimpleObjectTwo": {
      "type": "object",
      "required": [
        "int_array",
        "descriptor"
      ],
      "properties": {
        "descriptor": {
          "type": "string"
        },
        "int_array": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      }
    }
  },
  "tags": [
    {
      "description": "Calls which are unrestricted",
      "name": "open"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "A Test API for testing lambda/go-swagger integration",
    "title": "Lambda Go Swagger Test API",
    "contact": {
      "email": "sean@gopaddy.ch"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "paths": {
    "/": {
      "get": {
        "description": "Endpoint which returns the API version and the running backend version",
        "produces": [
          "application/json"
        ],
        "tags": [
          "open"
        ],
        "summary": "API Identifier endpoint",
        "operationId": "getApiIdentifier",
        "responses": {
          "200": {
            "description": "Returns API version and running backend version",
            "schema": {
              "$ref": "#/definitions/SimpleMessageResponse"
            }
          },
          "500": {
            "description": "General Failure"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "post",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations"
          }
        }
      }
    },
    "/body-param/complex-response": {
      "get": {
        "description": "Get endpoint defined which simply gives response indicating that POST should be used",
        "produces": [
          "application/json"
        ],
        "tags": [
          "open"
        ],
        "summary": "Get endpoint defined which simply gives response indicating that POST should be used",
        "operationId": "getBodyParamComplexResponse",
        "responses": {
          "500": {
            "description": "General Failure"
          },
          "501": {
            "description": "API call runs, but there is no implementation",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "post",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations"
          }
        }
      },
      "post": {
        "description": "An endpoint which takes an input parameter and returns a HTTP response code and a complex JSON object in a body",
        "produces": [
          "application/json"
        ],
        "tags": [
          "open"
        ],
        "summary": "An endpoint which takes an input parameters and returns a HTTP response code and a complex JSON object in a body",
        "operationId": "postBodyParamComplexResponse",
        "parameters": [
          {
            "description": "An input JSON object required with this call",
            "name": "bodyParam",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InputObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful execution of API call returning complex object",
            "schema": {
              "$ref": "#/definitions/ComplexObjectResponse"
            }
          },
          "500": {
            "description": "General Failure"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "post",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations"
          }
        }
      }
    },
    "/body-param/empty-response": {
      "get": {
        "description": "Get endpoint defined which simply gives response indicating that POST should be used",
        "produces": [
          "application/json"
        ],
        "tags": [
          "open"
        ],
        "summary": "Get endpoint defined which simply gives response indicating that POST should be used",
        "operationId": "getBodyParamEmptyResponse",
        "responses": {
          "500": {
            "description": "General Failure"
          },
          "501": {
            "description": "API call runs, but there is no implementation",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "post",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations"
          }
        }
      },
      "post": {
        "description": "Endpoint which takes a body parameter and returns a HTTP response code only",
        "produces": [
          "application/json"
        ],
        "tags": [
          "open"
        ],
        "summary": "Endpoint which takes a body parameter and returns a HTTP response code only",
        "operationId": "postBodyParamEmptyResponse",
        "parameters": [
          {
            "description": "An arbitrary test parameter which is ignored here",
            "name": "bodyParam",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InputObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful execution of API call"
          },
          "500": {
            "description": "General Failure"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "post",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations"
          }
        }
      }
    },
    "/body-param/error-response": {
      "get": {
        "description": "Get endpoint defined which simply gives response indicating that POST should be used",
        "produces": [
          "application/json"
        ],
        "tags": [
          "open"
        ],
        "summary": "Get endpoint defined which simply gives response indicating that POST should be used",
        "operationId": "getBodyParamErrorResponse",
        "responses": {
          "500": {
            "description": "General Failure"
          },
          "501": {
            "description": "API call runs, but there is no implementation",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "post",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations"
          }
        }
      },
      "post": {
        "description": "An endpoint which takes an input parameter and returns a HTTP response code and an error response",
        "produces": [
          "application/json"
        ],
        "tags": [
          "open"
        ],
        "summary": "An endpoint which takes an input parameter and returns a HTTP response code and an error response",
        "operationId": "postBodyParamErrorResponse",
        "parameters": [
          {
            "description": "An input JSON object required with this call",
            "name": "bodyParam",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InputObject"
            }
          }
        ],
        "responses": {
          "418": {
            "description": "Error generated when executing API call",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "General Failure"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "post",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations"
          }
        }
      }
    },
    "/body-param/simple-response": {
      "get": {
        "description": "Get endpoint defined which simply gives response indicating that POST should be used",
        "produces": [
          "application/json"
        ],
        "tags": [
          "open"
        ],
        "summary": "Get endpoint defined which simply gives response indicating that POST should be used",
        "operationId": "getBodyParamSimpleResponse",
        "responses": {
          "500": {
            "description": "General Failure"
          },
          "501": {
            "description": "API call runs, but there is no implementation",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "post",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations"
          }
        }
      },
      "post": {
        "description": "Endpoint which takes a body parameter and returns a HTTP response containing a simple message",
        "produces": [
          "application/json"
        ],
        "tags": [
          "open"
        ],
        "summary": "Endpoint which takes a body parameter and returns a HTTP response containing a simple message",
        "operationId": "postBodyParamSimpleResponse",
        "parameters": [
          {
            "description": "An input JSON object required with this call",
            "name": "bodyParam",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InputObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Test Response",
            "schema": {
              "$ref": "#/definitions/SimpleMessageResponse"
            }
          },
          "500": {
            "description": "General Failure"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "post",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations"
          }
        }
      }
    },
    "/no-params/complex-response": {
      "get": {
        "description": "An endpoint which returns a HTTP response code and a complex JSON object in a body",
        "produces": [
          "application/json"
        ],
        "tags": [
          "open"
        ],
        "summary": "An endpoint which returns a HTTP response code and a complex JSON object in a body",
        "operationId": "getNoParamsComplexResponse",
        "responses": {
          "200": {
            "description": "Successful execution of API call returning complex object",
            "schema": {
              "$ref": "#/definitions/ComplexObjectResponse"
            }
          },
          "500": {
            "description": "General Failure"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "post",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations"
          }
        }
      }
    },
    "/no-params/empty-response": {
      "get": {
        "description": "An endpoint which returns a HTTP response code only",
        "produces": [
          "application/json"
        ],
        "tags": [
          "open"
        ],
        "summary": "An endpoint which returns a HTTP response code only",
        "operationId": "getNoParamsEmptyResponse",
        "responses": {
          "200": {
            "description": "Successful execution of API call"
          },
          "500": {
            "description": "General Failure"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "post",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations"
          }
        }
      }
    },
    "/no-params/error-response": {
      "get": {
        "description": "An endpoint which returns a HTTP response code and an error response",
        "produces": [
          "application/json"
        ],
        "tags": [
          "open"
        ],
        "summary": "An endpoint which returns a HTTP response code and an error response",
        "operationId": "getNoParamsErrorResponse",
        "responses": {
          "418": {
            "description": "Error generated when executing API call",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "General Failure"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "post",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations"
          }
        }
      }
    },
    "/no-params/simple-response": {
      "get": {
        "description": "An endpoint which returns a HTTP response code and a JSON encoded message in a body",
        "produces": [
          "application/json"
        ],
        "tags": [
          "open"
        ],
        "summary": "An endpoint which returns a HTTP response code and a JSON encoded message in a body",
        "operationId": "getNoParamsSimpleResponse",
        "responses": {
          "200": {
            "description": "Successful execution of API call returning message in simple JSON object",
            "schema": {
              "$ref": "#/definitions/SimpleMessageResponse"
            }
          },
          "500": {
            "description": "General Failure"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "post",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations"
          }
        }
      }
    },
    "/path-param/complex-response/{param}": {
      "get": {
        "description": "An endpoint which takes an input parameter and returns a HTTP response code and a complex JSON object in a body",
        "produces": [
          "application/json"
        ],
        "tags": [
          "open"
        ],
        "summary": "An endpoint which takes an input parameters and returns a HTTP response code and a complex JSON object in a body",
        "operationId": "getPathParamComplexResponse",
        "parameters": [
          {
            "type": "string",
            "description": "An arbitrary test parameter which is returned in the response",
            "name": "param",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful execution of API call returning complex object",
            "schema": {
              "$ref": "#/definitions/ComplexObjectResponse"
            }
          },
          "500": {
            "description": "General Failure"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "post",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations"
          }
        }
      }
    },
    "/path-param/empty-response/{param}": {
      "get": {
        "description": "Endpoint which takes a parameter and returns a HTTP response code only",
        "produces": [
          "application/json"
        ],
        "tags": [
          "open"
        ],
        "summary": "Endpoint which takes a parameter and returns a HTTP response code only",
        "operationId": "getPathParamEmptyResponse",
        "parameters": [
          {
            "type": "string",
            "description": "An arbitrary test parameter which is ignored here",
            "name": "param",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful execution of API call"
          },
          "500": {
            "description": "General Failure"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "post",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations"
          }
        }
      }
    },
    "/path-param/error-response/{param}": {
      "get": {
        "description": "An endpoint which takes an input parameter and returns a HTTP response code and an error response",
        "produces": [
          "application/json"
        ],
        "tags": [
          "open"
        ],
        "summary": "An endpoint which takes an input parameter and returns a HTTP response code and an error response",
        "operationId": "getPathParamErrorResponse",
        "parameters": [
          {
            "type": "string",
            "description": "An arbitrary test parameter which is returned in the response",
            "name": "param",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "418": {
            "description": "Error generated when executing API call",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "General Failure"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "post",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations"
          }
        }
      }
    },
    "/path-param/simple-response/{param}": {
      "get": {
        "description": "Endpoint which takes a parameter and returns a HTTP response containing a simple message",
        "produces": [
          "application/json"
        ],
        "tags": [
          "open"
        ],
        "summary": "Endpoint which takes a parameter and returns a HTTP response containing a simple message",
        "operationId": "getPathParamSimpleResponse",
        "parameters": [
          {
            "type": "string",
            "description": "An arbitrary test parameter which is returned in the response",
            "name": "param",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful execution of API call returning message in simple JSON object",
            "schema": {
              "$ref": "#/definitions/SimpleMessageResponse"
            }
          },
          "500": {
            "description": "General Failure"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "post",
          "type": "aws_proxy",
          "uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaSwaggerTestFunction.Arn}/invocations"
          }
        }
      }
    }
  },
  "definitions": {
    "ComplexObjectResponse": {
      "type": "object",
      "required": [
        "object1",
        "object2"
      ],
      "properties": {
        "object1": {
          "$ref": "#/definitions/SimpleObjectOne"
        },
        "object2": {
          "$ref": "#/definitions/SimpleObjectTwo"
        },
        "optional_param": {
          "type": "integer"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "required": [
        "error_number",
        "error_string"
      ],
      "properties": {
        "error_number": {
          "type": "integer"
        },
        "error_string": {
          "type": "string"
        }
      }
    },
    "InputObject": {
      "type": "object",
      "required": [
        "string",
        "descriptor",
        "int_val"
      ],
      "properties": {
        "descriptor": {
          "type": "string"
        },
        "int_val": {
          "type": "integer"
        },
        "string": {
          "type": "string"
        }
      }
    },
    "SimpleMessageResponse": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "SimpleObjectOne": {
      "type": "object",
      "required": [
        "string_array",
        "descriptor",
        "int_val"
      ],
      "properties": {
        "descriptor": {
          "type": "string"
        },
        "int_val": {
          "type": "integer"
        },
        "string_array": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SimpleObjectTwo": {
      "type": "object",
      "required": [
        "int_array",
        "descriptor"
      ],
      "properties": {
        "descriptor": {
          "type": "string"
        },
        "int_array": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      }
    }
  },
  "tags": [
    {
      "description": "Calls which are unrestricted",
      "name": "open"
    }
  ]
}`))
}
